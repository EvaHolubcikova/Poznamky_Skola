HTTP Protokol 
- prenos html dokumentov medzi servermi a klientmi 
- každý si vytvrí server a vlastnú stránku, vytvoríme webserver
- Teplora, Vlhkosť, Ovládanie Ledky, Farba Ledky, Servomotor

Príklady->WebServer->PostServer

- zavoláme si IP Adresu-Vypíšeme si ju na displej
- root požiadavka- čistá IP adresa, ďalej v nej nič nepíšem
- keď píšem do adresy používam požiadavku GET
- server.on("/", handleRoot); //root adresa, root požiadavka, handleRoot-meno funkcie, mozeme premenovat



-.-------------------------------------------------------------------------------------
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

//#ifndef STASSID
//#define STASSID "your-ssid"
//#define STAPSK  "your-password"
//#endif
//
//const char* ssid     = STASSID;
//const char* password = STAPSK;

ESP8266WebServer server(80);

const String MojaStranka = "<html>\
  <head>\
    <title>ESP8266 Web Server POST handling</title>\
    <style>\
      body { background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }\
    </style>\
  </head>\
  <body>\
    <h1>POST plain text to /postplain/</h1><br>\
    <form method=\"post\" enctype=\"text/plain\" action=\"/postplain/\">\
      <input type=\"text\" name=\'{\"hello\": \"world\", \"trash\": \"\' value=\'\"}\'><br>\
      <input type=\"submit\" value=\"Submit\">\
    </form>\
    <h1>POST form data to /postform/</h1><br>\
    <form method=\"post\" enctype=\"application/x-www-form-urlencoded\" action=\"/postform/\">\
      <input type=\"text\" name=\"hello\" value=\"world\"><br>\
      <input type=\"submit\" value=\"Submit\">\
    </form>\
  </body>\
</html>";

void handleRoot() {
   server.send(200, "text/html", MojaStranka); //parametre: 1.Stav, 2.Posiela dokumentu typu html, 3.Nazov stranky
}

void handleNotFound() {
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
}

void setup(void) {
    Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  server.on("/", handleRoot); //root adresa, root požiadavka, handleRoot-meno funkcie, mozeme premenovat

  server.onNotFound(handleNotFound); //stranka nenajdena, menoFunkcie-toez mozeme premenovať

  server.begin(); 
  Serial.println("HTTP server started"); //vypisujeme na OLED dispelj
}

void loop(void) {
  server.handleClient();
}
